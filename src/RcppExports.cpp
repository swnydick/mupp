// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// find_all_permutations
IntegerMatrix find_all_permutations(int n, int init);
RcppExport SEXP _mupp_find_all_permutations(SEXP nSEXP, SEXP initSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type init(initSEXP);
    rcpp_result_gen = Rcpp::wrap(find_all_permutations(n, init));
    return rcpp_result_gen;
END_RCPP
}
// pder1_theta_ggum_all
NumericMatrix pder1_theta_ggum_all(NumericMatrix thetas, NumericMatrix params);
RcppExport SEXP _mupp_pder1_theta_ggum_all(SEXP thetasSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type thetas(thetasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type params(paramsSEXP);
    rcpp_result_gen = Rcpp::wrap(pder1_theta_ggum_all(thetas, params));
    return rcpp_result_gen;
END_RCPP
}
// p_mupp_rank_impl
NumericMatrix p_mupp_rank_impl(NumericMatrix thetas, NumericMatrix params, IntegerVector dims, IntegerVector picked_order_id);
RcppExport SEXP _mupp_p_mupp_rank_impl(SEXP thetasSEXP, SEXP paramsSEXP, SEXP dimsSEXP, SEXP picked_order_idSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type thetas(thetasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type dims(dimsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type picked_order_id(picked_order_idSEXP);
    rcpp_result_gen = Rcpp::wrap(p_mupp_rank_impl(thetas, params, dims, picked_order_id));
    return rcpp_result_gen;
END_RCPP
}
// loglik_mupp_rank_impl
NumericMatrix loglik_mupp_rank_impl(NumericMatrix thetas, NumericMatrix params, IntegerMatrix items, IntegerMatrix picked_orders);
RcppExport SEXP _mupp_loglik_mupp_rank_impl(SEXP thetasSEXP, SEXP paramsSEXP, SEXP itemsSEXP, SEXP picked_ordersSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type thetas(thetasSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type items(itemsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type picked_orders(picked_ordersSEXP);
    rcpp_result_gen = Rcpp::wrap(loglik_mupp_rank_impl(thetas, params, items, picked_orders));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mupp_find_all_permutations", (DL_FUNC) &_mupp_find_all_permutations, 2},
    {"_mupp_pder1_theta_ggum_all", (DL_FUNC) &_mupp_pder1_theta_ggum_all, 2},
    {"_mupp_p_mupp_rank_impl", (DL_FUNC) &_mupp_p_mupp_rank_impl, 4},
    {"_mupp_loglik_mupp_rank_impl", (DL_FUNC) &_mupp_loglik_mupp_rank_impl, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_mupp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
